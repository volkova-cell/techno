"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card } from "@/components/ui/card"
import {
  Home,
  MapPin,
  Calendar,
  Grid3X3,
  User,
  Bell,
  HelpCircle,
  ChevronRight,
  ArrowRight,
  Building2,
  FileText,
  Truck,
  Search,
  Bot,
  Info,
  ShoppingBag,
  Key,
} from "lucide-react"
import Image from "next/image"

interface DashboardScreenProps {
  onBack: () => void
}

export default function DashboardScreen({ onBack }: DashboardScreenProps) {
  const [activeTab, setActiveTab] = useState("home")

  const newsItems = [
    {
      id: 1,
      title: "–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤",
      description: "–ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ —Å –ª—å–≥–æ—Ç–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –∞—Ä–µ–Ω–¥—ã",
      date: "15 —è–Ω–≤",
      image: "/office-building-technology.jpg",
    },
    {
      id: 2,
      title: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ä—É–º 2024",
      description: "–ü—Ä–∏–≥–ª–∞—à–∞–µ–º –Ω–∞ –µ–∂–µ–≥–æ–¥–Ω—É—é –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é –ø–æ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º",
      date: "12 —è–Ω–≤",
      image: "/conference-presentation-technology.jpg",
    },
    {
      id: 3,
      title: "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã",
      description: "–û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è–º–∏",
      date: "10 —è–Ω–≤",
      image: "/modern-office-building.png",
    },
  ]

  const servicesItems = [
    { name: "–ü–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω—ã–µ", icon: Building2 },
    { name: "–î–æ–∫—É–º–µ–Ω—Ç—ã", icon: FileText },
    { name: "–ö—É—Ä—å–µ—Ä", icon: Truck },
    { name: "–ü–æ–∏—Å–∫", icon: Search },
    { name: "–ß–∞—Ç-–±–æ—Ç", icon: Bot },
    { name: "–ò–Ω—Ñ–æ", icon: Info },
  ]

  const fullServicesList = [
    { name: "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç –¥–ª—è –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤/–∑–∞–ª–æ–≤", icon: Building2 },
    { name: "–ó–∞–∫–∞–∑ –ø—Ä–æ–ø—É—Å–∫–æ–≤", icon: Key },
    { name: "–ó–∞–∫–∞–∑ –∫—É—Ä—å–µ—Ä–∞", icon: Truck },
    { name: "–ë—é—Ä–æ –Ω–∞—Ö–æ–¥–æ–∫", icon: Search },
    { name: "–ß–∞—Ç-–±–æ—Ç —Å –ò–ò", icon: Bot },
    { name: "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã (FAQ)", icon: HelpCircle },
    { name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –û–≠–ó ¬´–¢–µ—Ö–Ω–æ–ø–æ–ª–∏—Å –ú–æ—Å–∫–≤–∞¬ª", icon: Info },
    { name: "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —Å –º–µ—Ä—á–µ–º –∫–æ–º–ø–∞–Ω–∏–∏", icon: ShoppingBag },
  ]

  const tabs = [
    { id: "home", label: "–ì–ª–∞–≤–Ω–∞—è", icon: Home },
    { id: "map", label: "–ö–∞—Ä—Ç–∞", icon: MapPin },
    { id: "events", label: "–°–æ–±—ã—Ç–∏—è", icon: Calendar },
    { id: "services", label: "–°–µ—Ä–≤–∏—Å—ã", icon: Grid3X3 },
    { id: "profile", label: "–ü—Ä–æ—Ñ–∏–ª—å", icon: User },
  ]

  const renderHomeTab = () => (
    <div className="flex-1 overflow-y-auto">
      <div className="px-4 py-4 bg-white border-b border-gray-100">
        <div className="flex items-center justify-between">
          <Image
            src="/images/technopolis-logo.png"
            alt="–¢–µ—Ö–Ω–æ–ø–æ–ª–∏—Å –ú–æ—Å–∫–≤–∞"
            width={120}
            height={40}
            className="object-contain"
          />
          <Button variant="ghost" size="sm" className="p-2">
            <Bell className="w-5 h-5 text-[#E91E63]" />
          </Button>
        </div>
      </div>

      <div className="p-4 space-y-6">
        <Card className="p-4 bg-gradient-to-r from-[#E91E63] to-[#C2185B] text-white">
          <div className="flex items-center justify-between mb-3">
            <h3 className="text-lg font-semibold">–ú–æ–∏ –±–∞–ª–ª—ã</h3>
            <Button variant="ghost" size="sm" className="p-1 text-white hover:bg-white/20">
              <HelpCircle className="w-4 h-4" />
            </Button>
          </div>
          <div className="text-2xl font-bold mb-3">2,450</div>
          <div className="flex gap-2">
            <Button
              variant="outline"
              size="sm"
              className="text-xs bg-white/20 border-white/30 text-white hover:bg-white/30"
            >
              –ò—Å—Ç–æ—Ä–∏—è –±–∞–ª–ª–æ–≤
            </Button>
            <Button
              variant="outline"
              size="sm"
              className="text-xs bg-white/20 border-white/30 text-white hover:bg-white/30"
            >
              –ü–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–∞–ª–ª—ã
            </Button>
          </div>
        </Card>

        <div>
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold text-gray-900">–ù–æ–≤–æ—Å—Ç–∏ –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</h3>
            <Button variant="ghost" size="sm" className="text-[#E91E63] text-sm">
              –í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ <ArrowRight className="w-4 h-4 ml-1" />
            </Button>
          </div>
          <div className="flex gap-4 overflow-x-auto pb-2 scrollbar-hide">
            {newsItems.map((item) => (
              <Card
                key={item.id}
                className="min-w-[280px] p-0 overflow-hidden cursor-pointer hover:shadow-md transition-shadow"
              >
                <div className="aspect-video relative">
                  <Image src={item.image || "/placeholder.svg"} alt={item.title} fill className="object-cover" />
                </div>
                <div className="p-4">
                  <div className="text-xs text-[#E91E63] font-medium mb-2">{item.date}</div>
                  <h4 className="font-semibold text-gray-900 mb-2 line-clamp-2">{item.title}</h4>
                  <p className="text-sm text-gray-600 line-clamp-2">{item.description}</p>
                </div>
              </Card>
            ))}
          </div>
        </div>

        <div>
          <h3 className="text-lg font-semibold text-gray-900 mb-4">–°–µ—Ä–≤–∏—Å—ã</h3>
          <div className="flex gap-3 overflow-x-auto pb-2 scrollbar-hide">
            {servicesItems.map((service, index) => (
              <Card
                key={index}
                className="min-w-[100px] p-4 text-center cursor-pointer hover:shadow-md transition-shadow"
              >
                <service.icon className="w-6 h-6 mx-auto mb-2 text-[#E91E63]" />
                <div className="text-xs font-medium text-gray-900">{service.name}</div>
              </Card>
            ))}
          </div>
        </div>
      </div>
    </div>
  )

  const renderServicesTab = () => (
    <div className="flex-1 overflow-y-auto">
      <div className="px-4 py-4 bg-white border-b border-gray-100">
        <h1 className="text-xl font-semibold text-gray-900">–°–µ—Ä–≤–∏—Å—ã</h1>
      </div>
      <div className="p-4">
        <div className="space-y-2">
          {fullServicesList.map((service, index) => (
            <Card key={index} className="p-4 cursor-pointer hover:shadow-md transition-shadow">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-3">
                  <service.icon className="w-5 h-5 text-[#E91E63]" />
                  <span className="font-medium text-gray-900">{service.name}</span>
                </div>
                <ChevronRight className="w-5 h-5 text-gray-400" />
              </div>
            </Card>
          ))}
        </div>
      </div>
    </div>
  )

  const renderEmptyTab = (title: string) => (
    <div className="flex-1 flex items-center justify-center">
      <div className="text-center">
        <div className="text-gray-400 mb-2">üöß</div>
        <p className="text-gray-600">{title} –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
      </div>
    </div>
  )

  return (
    <div className="h-full bg-gray-50 flex flex-col">
      {/* Content */}
      {activeTab === "home" && renderHomeTab()}
      {activeTab === "map" && renderEmptyTab("–ö–∞—Ä—Ç–∞")}
      {activeTab === "events" && renderEmptyTab("–°–æ–±—ã—Ç–∏—è")}
      {activeTab === "services" && renderServicesTab()}
      {activeTab === "profile" && renderEmptyTab("–ü—Ä–æ—Ñ–∏–ª—å")}

      <div className="bg-white border-t border-gray-200 px-2 py-2">
        <div className="flex justify-around items-center">
          {tabs.map((tab) => (
            <Button
              key={tab.id}
              variant="ghost"
              size="sm"
              onClick={() => setActiveTab(tab.id)}
              className={`flex flex-col items-center gap-1 p-2 min-w-0 flex-1 ${
                activeTab === tab.id ? "text-[#E91E63]" : "text-gray-500"
              }`}
            >
              <tab.icon className="w-5 h-5" />
              <span className="text-xs font-medium truncate">{tab.label}</span>
            </Button>
          ))}
        </div>
      </div>
    </div>
  )
}
